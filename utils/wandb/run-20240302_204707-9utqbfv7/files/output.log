Random Seed:  4494
{'Airplane': 0, 'Bag': 1, 'Cap': 2, 'Car': 3, 'Chair': 4, 'Earphone': 5, 'Guitar': 6, 'Knife': 7, 'Lamp': 8, 'Laptop': 9, 'Motorbike': 10, 'Mug': 11, 'Pistol': 12, 'Rocket': 13, 'Skateboard': 14, 'Table': 15}
{'Airplane': 4, 'Bag': 2, 'Cap': 2, 'Car': 4, 'Chair': 4, 'Earphone': 3, 'Guitar': 3, 'Knife': 2, 'Lamp': 4, 'Laptop': 2, 'Motorbike': 6, 'Mug': 2, 'Pistol': 3, 'Rocket': 3, 'Skateboard': 3, 'Table': 3} 4
{'Airplane': 0, 'Bag': 1, 'Cap': 2, 'Car': 3, 'Chair': 4, 'Earphone': 5, 'Guitar': 6, 'Knife': 7, 'Lamp': 8, 'Laptop': 9, 'Motorbike': 10, 'Mug': 11, 'Pistol': 12, 'Rocket': 13, 'Skateboard': 14, 'Table': 15}
{'Airplane': 4, 'Bag': 2, 'Cap': 2, 'Car': 4, 'Chair': 4, 'Earphone': 3, 'Guitar': 3, 'Knife': 2, 'Lamp': 4, 'Laptop': 2, 'Motorbike': 6, 'Mug': 2, 'Pistol': 3, 'Rocket': 3, 'Skateboard': 3, 'Table': 3} 4
{'Airplane': 0, 'Bag': 1, 'Cap': 2, 'Car': 3, 'Chair': 4, 'Earphone': 5, 'Guitar': 6, 'Knife': 7, 'Lamp': 8, 'Laptop': 9, 'Motorbike': 10, 'Mug': 11, 'Pistol': 12, 'Rocket': 13, 'Skateboard': 14, 'Table': 15}
{'Airplane': 4, 'Bag': 2, 'Cap': 2, 'Car': 4, 'Chair': 4, 'Earphone': 3, 'Guitar': 3, 'Knife': 2, 'Lamp': 4, 'Laptop': 2, 'Motorbike': 6, 'Mug': 2, 'Pistol': 3, 'Rocket': 3, 'Skateboard': 3, 'Table': 3} 4
12137 2874
classes 16
/home/haoran/.local/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:138: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
[0: 0/379] train loss: 3.042145 accuracy: 0.062500
[0: 0/379] [94mtest[39m loss: 2.768759 accuracy: 0.062500
[0: 1/379] train loss: 2.556304 accuracy: 0.375000
[0: 2/379] train loss: 2.379426 accuracy: 0.437500
[0: 3/379] train loss: 2.095373 accuracy: 0.500000
[0: 4/379] train loss: 1.876085 accuracy: 0.562500
[0: 5/379] train loss: 1.708702 accuracy: 0.656250
[0: 6/379] train loss: 1.374392 accuracy: 0.687500
[0: 7/379] train loss: 1.748003 accuracy: 0.500000
[0: 8/379] train loss: 1.125944 accuracy: 0.750000
[0: 9/379] train loss: 1.169897 accuracy: 0.750000
[0: 10/379] train loss: 1.397485 accuracy: 0.593750
[0: 10/379] [94mtest[39m loss: 2.390551 accuracy: 0.375000
[0: 11/379] train loss: 1.443003 accuracy: 0.562500
[0: 12/379] train loss: 0.885637 accuracy: 0.750000
[0: 13/379] train loss: 1.428853 accuracy: 0.562500
[0: 14/379] train loss: 1.435515 accuracy: 0.656250
[0: 15/379] train loss: 0.844453 accuracy: 0.875000
[0: 16/379] train loss: 0.856546 accuracy: 0.750000
[0: 17/379] train loss: 0.771023 accuracy: 0.812500
[0: 18/379] train loss: 0.954718 accuracy: 0.781250
[0: 19/379] train loss: 0.877919 accuracy: 0.781250
[0: 20/379] train loss: 0.745378 accuracy: 0.843750
[0: 20/379] [94mtest[39m loss: 2.348181 accuracy: 0.312500
[0: 21/379] train loss: 1.158784 accuracy: 0.656250
[0: 22/379] train loss: 1.027630 accuracy: 0.750000
[0: 23/379] train loss: 1.425450 accuracy: 0.593750
[0: 24/379] train loss: 0.718047 accuracy: 0.843750
[0: 25/379] train loss: 0.819911 accuracy: 0.812500
[0: 26/379] train loss: 0.794199 accuracy: 0.812500
[0: 27/379] train loss: 1.280687 accuracy: 0.562500
[0: 28/379] train loss: 0.824870 accuracy: 0.781250
[0: 29/379] train loss: 0.760858 accuracy: 0.812500
[0: 30/379] train loss: 0.827700 accuracy: 0.718750
[0: 30/379] [94mtest[39m loss: 2.205943 accuracy: 0.312500
[0: 31/379] train loss: 1.062161 accuracy: 0.656250
[0: 32/379] train loss: 0.751371 accuracy: 0.718750
[0: 33/379] train loss: 1.052889 accuracy: 0.750000
[0: 34/379] train loss: 0.835395 accuracy: 0.781250
[0: 35/379] train loss: 0.666204 accuracy: 0.781250
[0: 36/379] train loss: 0.659501 accuracy: 0.812500
[0: 37/379] train loss: 0.853599 accuracy: 0.718750
[0: 38/379] train loss: 0.641477 accuracy: 0.843750
[0: 39/379] train loss: 0.756717 accuracy: 0.781250
[0: 40/379] train loss: 0.398019 accuracy: 0.906250
[0: 40/379] [94mtest[39m loss: 1.092139 accuracy: 0.562500
[0: 41/379] train loss: 0.872865 accuracy: 0.687500
[0: 42/379] train loss: 0.554907 accuracy: 0.875000
[0: 43/379] train loss: 1.002082 accuracy: 0.718750
[0: 44/379] train loss: 0.813326 accuracy: 0.781250
[0: 45/379] train loss: 0.765310 accuracy: 0.687500
[0: 46/379] train loss: 1.123940 accuracy: 0.750000
[0: 47/379] train loss: 0.862934 accuracy: 0.750000
[0: 48/379] train loss: 0.796216 accuracy: 0.718750
[0: 49/379] train loss: 0.855671 accuracy: 0.781250
[0: 50/379] train loss: 1.096575 accuracy: 0.656250
[0: 50/379] [94mtest[39m loss: 0.852570 accuracy: 0.750000
[0: 51/379] train loss: 1.150126 accuracy: 0.718750
[0: 52/379] train loss: 0.819821 accuracy: 0.812500
[0: 53/379] train loss: 1.307230 accuracy: 0.656250
[0: 54/379] train loss: 0.613138 accuracy: 0.750000
[0: 55/379] train loss: 0.617864 accuracy: 0.843750
[0: 56/379] train loss: 0.546683 accuracy: 0.812500
[0: 57/379] train loss: 0.607523 accuracy: 0.812500
[0: 58/379] train loss: 0.659913 accuracy: 0.750000
[0: 59/379] train loss: 0.806732 accuracy: 0.687500
[0: 60/379] train loss: 0.420089 accuracy: 0.875000
[0: 60/379] [94mtest[39m loss: 0.533966 accuracy: 0.781250
[0: 61/379] train loss: 0.888575 accuracy: 0.687500
[0: 62/379] train loss: 0.766810 accuracy: 0.750000
[0: 63/379] train loss: 0.587275 accuracy: 0.781250
[0: 64/379] train loss: 0.776144 accuracy: 0.781250
[0: 65/379] train loss: 0.798099 accuracy: 0.750000
[0: 66/379] train loss: 0.427780 accuracy: 0.875000
[0: 67/379] train loss: 0.707195 accuracy: 0.687500
[0: 68/379] train loss: 0.464359 accuracy: 0.875000
[0: 69/379] train loss: 0.584923 accuracy: 0.812500
[0: 70/379] train loss: 0.913737 accuracy: 0.718750
Traceback (most recent call last):
  File "train_classification.py", line 171, in <module>
    if i % 10 == 0:
  File "/home/haoran/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 435, in __iter__
    return self._get_iterator()
  File "/home/haoran/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 381, in _get_iterator
    return _MultiProcessingDataLoaderIter(self)
  File "/home/haoran/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1016, in __init__
    index_queue = multiprocessing_context.Queue()  # type: ignore[var-annotated]
  File "/home/haoran/anaconda3/envs/pytorch_env/lib/python3.8/multiprocessing/context.py", line 102, in Queue
    from .queues import Queue
  File "<frozen importlib._bootstrap>", line 389, in parent
KeyboardInterrupt